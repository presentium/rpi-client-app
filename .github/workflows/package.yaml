name: Create Deb Package

on:
  push:
    branches:
      - main
    tags:
      - '*'
    
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PACKAGE_NAME: presentium-client
      PACKAGE_ARCH: all
    outputs:
      FULL_NAME: ${{ steps.set_full_name.outputs.FULL_NAME }}
    steps:
    - uses: actions/checkout@v4

    - name: Get Version
      run: |
        if [[ ${{ github.ref }} == refs/tags/* ]]; then
          echo "VERSION=${{ github.ref_name }}" >> "$GITHUB_ENV"
        else
          echo "VERSION=0.0.0-${{ github.sha }}" >> "$GITHUB_ENV"
        fi

    - name: Set Full Name
      id: set_full_name
      run: |
        echo "FULL_NAME=${{ env.PACKAGE_NAME }}_${{ env.VERSION }}-1_${{ env.PACKAGE_ARCH }}" >> $GITHUB_ENV
        echo "FULL_NAME=${{ env.PACKAGE_NAME }}_${{ env.VERSION }}-1_${{ env.PACKAGE_ARCH }}" >> $GITHUB_OUTPUT

    - name: Run package script
      run: |
        chmod +x package.sh
        ./package.sh $PACKAGE_NAME $VERSION $PACKAGE_ARCH

    - name: Upload Deb Package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.FULL_NAME }}.deb
        path: .package-build/${{ env.FULL_NAME }}.deb
        if-no-files-found: error

    - name: Upload Deb Info
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.FULL_NAME }}.deb.info
        path: .package-build/${{ env.FULL_NAME }}.deb.info
        if-no-files-found: error

    - name: Upload Deb Content
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.FULL_NAME }}.deb.content
        path: .package-build/${{ env.FULL_NAME }}.deb.content
        if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Deb Package
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.FULL_NAME }}.deb

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: '**/*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger deb repo package build
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          repository: presentium/deb
          event-type: rpi-client-release